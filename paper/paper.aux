\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}Context}{3}\protected@file@percent }
\newlabel{context}{{2}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Schematic of the existing UK climate model.}}{3}\protected@file@percent }
\newlabel{coupled}{{1}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}The Unified Model}{3}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Climate Configuration}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Current UM IO Scheme}{4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Resolution and Performance}{4}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The Unified Model configuration and output data flow (for an atmosphere only instance): configuration files define the domain decomposition (the number of processing elements, PEs) and the outputs required. Output is written to STASH and, then, in the IO server configuration, written to multiple IO server instances, which each writes to disk. One MPI context (shown in yellow) covers the entire activity. Control flow is shown in black, data flow in red. }}{5}\protected@file@percent }
\newlabel{uma-fig}{{2}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}XIOS}{5}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces UM atmosphere strong scaling for a high resolution model (N512) with and without IO, and for a low resolution model (N96) with atmospheric chemistry included. All plots display wall clock time against number of cores.}}{6}\protected@file@percent }
\newlabel{scaling-um-fig}{{3}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}XML}{6}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}Software Structure}{7}\protected@file@percent }
\newlabel{software}{{3}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Maintaining the look and feel of UM diagnostics: the Rose GUI is used to configure both the UM atmosphere via namelists and the XIOS output. The UM reads the XML files, integrates them with the STASH system, and sends the fields to the XIOS server.}}{7}\protected@file@percent }
\newlabel{fig-xconfig}{{4}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}XIOS in the UM}{7}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Workflow for creating XML files from STASH requests. The familiar Rose GUI isolates the user from details about XIOS XML. Utility \texttt  {stash2xiosxml} reads configuration files generated by Rose to create an XML description of the diagnostic output.}}{8}\protected@file@percent }
\newlabel{stash2xiosxml}{{5}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}STASH to XML Utility}{8}\protected@file@percent }
\newlabel{stash2xml}{{3.1.1}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}New Code in the UM}{8}\protected@file@percent }
\newlabel{new-code}{{3.1.2}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Areas in the UM where the use of XIOS impacts the code. Diagnostics are intercepted in the routine STASH. All other UM IO (logging, checkpointing, and diagnostics not directed to XIOS) is handled traditionally.}}{9}\protected@file@percent }
\newlabel{um-xios-code}{{6}{9}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.3}Build System and Job Submission}{9}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}XIOS UM Ensemble}{9}\protected@file@percent }
\newlabel{um-ensemble}{{4}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}UM Code for an Ensemble}{10}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Rose Ensemble Configuration}{10}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Key control and data flow concepts for XIOS management of a UM ensemble. The XIOS controls the output of each UM instance by exploiting XIOS clients within each process of each UM instance. Output from the clients goes through XIOS server instances to disk.}}{10}\protected@file@percent }
\newlabel{fig-xios-layout}{{7}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Configuring Ensemble Output}{11}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {5}Results}{11}\protected@file@percent }
\newlabel{results}{{5}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Single UM}{11}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Single model core counts}}{12}\protected@file@percent }
\newlabel{table1}{{1}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}UM Ensembles}{12}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.1}N96}{12}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.2}N512}{12}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Maximum core counts for the largest ensembles}}{13}\protected@file@percent }
\newlabel{table2}{{2}{13}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Single model N512 IO performance. The integration ran for 46 model hours to create 330GB of diagnostic output (equivalent to 59TB/year.) The significant IO overhead (\nobreakspace  {}92\%) for a synchronous write is reduced to \nobreakspace  {}2\% when XIOS is used. All times in seconds and model initialisation and finalisation time removed.}}{13}\protected@file@percent }
\newlabel{table3}{{3}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Scaling curves for ensemble writing using N96 ensembles for multiple file output. Each N96 ensemble member ran on 504 PEs. Red data points represent the sum of times per time step for the run; the model performs ensemble averaging and data output every 6th-time step. The blue data points represent the average time for the output time step, which exhibits a near-linear scaling with ensemble size.}}{13}\protected@file@percent }
\newlabel{first-ensemble-runs-n96}{{8}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Scaling curves for ensemble writing using N512 multiple file output. Each N512 ensemble member ran on 1920 PEs. Red data points represent the sum of times per time step for the run; the model performs ensemble averaging and data output every 12th-time step.The blue data points represent the average time for the output time step, which exhibits a near-linear scaling with ensemble size.}}{14}\protected@file@percent }
\newlabel{first-ensemble-runs-n512}{{9}{14}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Summary and Further Work}{14}\protected@file@percent }
\newlabel{summary}{{6}{14}}
\bibdata{ensembles18}
\bibstyle{elsarticle-num}
